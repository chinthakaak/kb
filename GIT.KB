git clone https://hub.jazz.net/git/iotimpl/IotElectronicAppliances
#check status of branch
git status

# switch between branches
git checkout api_connect
git checkout master

* apiconnect
  master
  remotes/origin/HEAD -> origin/master
  remotes/origin/master

# list both remote-tracking and local branches
git branch -a
* apiconnect
  master
  remotes/origin/HEAD -> origin/master
  remotes/origin/master
gitk

git gui

git fetch

# In git, a branch is a label for a commit. 
The label moves to new commits as they are created. When you create a git branch, 
you are not changing anything in the structure of the repository or the source tree. You are just creating a new label.

#
git log --oneline --graph --color --all --decorate
git rebase

git push

The main point of using a visualizer is to help you make sense of your branch history.

git log --all --source --pretty=oneline --graph

git show-branch

# git pull is like a git fetch + git merge

# You can do a git fetch at any time to update your remote-tracking branches under refs/remotes/<remote>/. 
This operation never changes any of your own local branches under refs/heads, and is safe to do without changing your working copy.

# git push origin intelli-washroom-apic
